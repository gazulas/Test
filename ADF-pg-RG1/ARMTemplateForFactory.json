{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADF-pg-RG1"
		},
		"ds_sql_hosp_admin_daily_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ds_sql_hosp_admin_daily'"
		},
		"ls_AzureDatabricks_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'ls_AzureDatabricks'"
		},
		"ls_ablob_src_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_ablob_src'"
		},
		"ls_adls_tgt_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adls_tgt'"
		},
		"ls_sql_server_db_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_sql_server_db'"
		},
		"ls_adls_tgt_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://tgt1pgrg1gen2.dfs.core.windows.net"
		},
		"ls_http_github_coviddata_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().sourceBaseURL}"
		},
		"tr_event_kickoff_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/24a83f75-5421-4c86-bf8e-4aed66368ebb/resourceGroups/PG-RG1/providers/Microsoft.Storage/storageAccounts/tgt1pgrg1gen2"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_all_at_one')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "pl_df_process_hospital_data",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_df_process_hospital_data",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "pl_ingest_http_cases_deaths",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_df_process_hospital_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ingest_http_cases_deaths",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "pl_ingest_population_data",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_df_process_hospital_data",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "pl_ingest_http_cases_deaths",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "pl_run_databricks_testprog",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ingest_population_data",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "pl_run_databricks_testprog",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_df_process_hospital_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_run_databricks_testprog",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Stage"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-12T18:56:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_df_process_hospital_data')]",
				"[concat(variables('factoryId'), '/pipelines/pl_ingest_http_cases_deaths')]",
				"[concat(variables('factoryId'), '/pipelines/pl_ingest_population_data')]",
				"[concat(variables('factoryId'), '/pipelines/pl_run_databricks_testprog')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_df_cases_deaths')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_cases_deaths",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_cases_deaths",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"srccasesanddeath": {},
									"countrylookup": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Coarse"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Final"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-12T18:18:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_cases_deaths')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_df_process_hospital_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_hospital_admision",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_hospital_admision",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"srchospitaladminsion": {},
									"srccountrylkp": {},
									"srcDateDim": {},
									"sinkWeekly": {},
									"sinkDaily": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Coarse"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Stage"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-12T18:18:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_hospital_admision')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ingest_http_cases_deaths')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "lkp_4_files",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_4_file_list_json",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "execute copy for every reco",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "lkp_4_files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('lkp_4_files').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Copy cases deaths_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_cases_deaths_http",
											"type": "DatasetReference",
											"parameters": {
												"relativeURL": {
													"value": "@item().sourceRelativeURL",
													"type": "Expression"
												},
												"BaseURL": {
													"value": "@item().sourceBaseURL",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_cases_deaths_raw_csv",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().sinkFileName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"srcRelativeURL": {
						"type": "String"
					},
					"sinkFileName": {
						"type": "String"
					},
					"sourceBaseURL": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Stage"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-12T18:18:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_4_file_list_json')]",
				"[concat(variables('factoryId'), '/datasets/ds_cases_deaths_http')]",
				"[concat(variables('factoryId'), '/datasets/ds_cases_deaths_raw_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ingest_population_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "file exists",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_population_raw_gz",
								"type": "DatasetReference",
								"parameters": {}
							},
							"timeout": "0.00:00:30",
							"sleep": 10,
							"minimumSize": 1024
						}
					},
					{
						"name": "Get file metadata",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "file exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_population_raw_gz",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"columnCount",
								"exists",
								"size",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "If Col count Matches",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get file metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Get file metadata').output.columnCount, 13)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy -Population ds",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:05:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_population_raw_gz",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_population_raw_tsv",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Stage"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-12T18:18:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_population_raw_gz')]",
				"[concat(variables('factoryId'), '/datasets/ds_population_raw_tsv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_load_tels_file_sqlserver')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "cpy tels to table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"maxConcurrentConnections": 1,
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": true
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Unit Turn Number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit Turn Number",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Facility Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Facility Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BU",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BU",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Area Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Area Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Unit Master ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit Master ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Square Footage",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Square Footage",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Care Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Care Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Notes1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Notes1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Area Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Area Status",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Assigned To",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Assigned To",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Template",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Template",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Created Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Created Date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Start Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Start Date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Due Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Due Date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Completed Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Completed Date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Days Open",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Days Open",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Checklist Item Number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Checklist Item Number",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Checklist Item",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Checklist Item",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Condition",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Condition",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Checklist Item Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Checklist Item Status",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Notes",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Notes",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Cost",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cost",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Hours",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Hours",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Unit Turn Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unit Turn Status",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_tels_test_file",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_tels_sqltable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Final"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-12T18:18:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_tels_test_file')]",
				"[concat(variables('factoryId'), '/datasets/ds_tels_sqltable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_run_databricks_testprog')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "execPopulationOperation",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/test-run/trans/transform-population-data"
						},
						"linkedServiceName": {
							"referenceName": "ls_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Stage"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-12T18:16:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_AzureDatabricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_4_file_list_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_ablob_src",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ecdc-file-list.json",
						"container": "configs"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"sourceBaseURL": {
							"type": "string"
						},
						"sourceRelativeURL": {
							"type": "string"
						},
						"sinkFileName": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_ablob_src')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_cases_and_deaths')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_tgt",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "cases_deaths.csv",
						"folderPath": "ecdc",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_tgt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_cases_deaths_http')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_http_github_coviddata",
					"type": "LinkedServiceReference",
					"parameters": {
						"sourceBaseURL": {
							"value": "@dataset().BaseURL",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"relativeURL": {
						"type": "string"
					},
					"BaseURL": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().relativeURL",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_http_github_coviddata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_cases_deaths_raw_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_tgt",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": "ecdc",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_tgt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_country_lookup')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_tgt",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "country-lookup.csv",
						"fileSystem": "lookujp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "country_code_2_digit",
						"type": "String"
					},
					{
						"name": "country_code_3_digit",
						"type": "String"
					},
					{
						"name": "continent",
						"type": "String"
					},
					{
						"name": "population",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_tgt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_date_dim_lkp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_tgt",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dim-date.csv",
						"fileSystem": "lookujp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "date_key",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "day",
						"type": "String"
					},
					{
						"name": "day_name",
						"type": "String"
					},
					{
						"name": "day_of_year",
						"type": "String"
					},
					{
						"name": "week_of_month",
						"type": "String"
					},
					{
						"name": "week_of_year",
						"type": "String"
					},
					{
						"name": "month_name",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					},
					{
						"name": "year_week",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_tgt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_ecdc_file_list')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_ablob_src",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ecdc-file-list-for-2-files.json",
						"container": "configs"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"sourceRelativeURL": {
							"type": "string"
						},
						"sinkFileName": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_ablob_src')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_hospital_adminsion_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_tgt",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "hospital_admissions.csv",
						"folderPath": "ecdc",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "indicator",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "year_week",
						"type": "String"
					},
					{
						"name": "value",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_tgt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_population_raw_gz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_ablob_src",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "population-by-age.tsv.gz",
						"container": "population"
					},
					"columnDelimiter": "\t",
					"compressionCodec": "gzip",
					"compressionLevel": "Optimal",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_ablob_src')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_population_raw_tsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_tgt",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "population-by-age.txt",
						"folderPath": "population",
						"fileSystem": "raw"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_tgt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_processed_cases_and_deaths')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_tgt",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ecdc/cases_deaths",
						"fileSystem": "targets"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_tgt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_tels_sqltable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sql_server_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "covid_reporting",
					"table": "wc_tels_ds"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sql_server_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_tels_test_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_tgt",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Tels_file.csv",
						"folderPath": "test",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Unit Turn Number",
						"type": "String"
					},
					{
						"name": "Facility Name",
						"type": "String"
					},
					{
						"name": "BU",
						"type": "String"
					},
					{
						"name": "Area Name",
						"type": "String"
					},
					{
						"name": "Unit Master ID",
						"type": "String"
					},
					{
						"name": "Square Footage",
						"type": "String"
					},
					{
						"name": "Care Type",
						"type": "String"
					},
					{
						"name": "Notes7",
						"type": "String"
					},
					{
						"name": "Area Status",
						"type": "String"
					},
					{
						"name": "Assigned To",
						"type": "String"
					},
					{
						"name": "Template",
						"type": "String"
					},
					{
						"name": "Created Date",
						"type": "String"
					},
					{
						"name": "Start Date",
						"type": "String"
					},
					{
						"name": "Due Date",
						"type": "String"
					},
					{
						"name": "Completed Date",
						"type": "String"
					},
					{
						"name": "Days Open",
						"type": "String"
					},
					{
						"name": "Checklist Item Number",
						"type": "String"
					},
					{
						"name": "Checklist Item",
						"type": "String"
					},
					{
						"name": "Condition",
						"type": "String"
					},
					{
						"name": "Checklist Item Status",
						"type": "String"
					},
					{
						"name": "Notes20",
						"type": "String"
					},
					{
						"name": "Cost",
						"type": "String"
					},
					{
						"name": "Hours",
						"type": "String"
					},
					{
						"name": "Unit Turn Status",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_tgt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_tgt_hospital_admission_weekly')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_tgt",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ecdc/hospital_admission_weekly",
						"fileSystem": "targets"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_tgt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_tgt_hospital_admissions_daily')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_tgt",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ecdc/hospital_admission_Daily",
						"fileSystem": "targets"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_tgt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_hosp_admin_daily')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ds_sql_hosp_admin_daily_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_AzureDatabricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-2959372777040264.4.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('ls_AzureDatabricks_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "1",
					"newClusterSparkEnvVars": {
						"PYSPARK_PYTHON": "/databricks/python3/bin/python3"
					},
					"newClusterVersion": "10.0.x-scala2.12",
					"newClusterInitScripts": [],
					"clusterOption": "Fixed"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_ablob_src')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_ablob_src_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adls_tgt')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls_tgt_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adls_tgt_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_http_github_coviddata')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"sourceBaseURL": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_http_github_coviddata_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sql_server_db')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_sql_server_db_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_event_kickoff')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_all_at_one",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/raw/blobs/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('tr_event_kickoff_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_all_at_one')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_ingest_population_data",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-04-03T17:38:00",
						"endTime": "2022-04-03T20:34:00",
						"timeZone": "Mountain Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_ingest_population_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_schedule')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_ingest_population_data",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-04-03T05:36:00",
						"endTime": "2022-04-03T22:30:00",
						"timeZone": "Mountain Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_ingest_population_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_cases_deaths')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_cases_and_deaths",
								"type": "DatasetReference"
							},
							"name": "srccasesanddeath"
						},
						{
							"dataset": {
								"referenceName": "ds_country_lookup",
								"type": "DatasetReference"
							},
							"name": "countrylookup"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_processed_cases_and_deaths",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "fileurope"
						},
						{
							"name": "select1"
						},
						{
							"name": "pivotcounts"
						},
						{
							"name": "lkpCountry"
						},
						{
							"name": "select2"
						}
					],
					"scriptLines": [
						"source(output(",
						"          country as string,",
						"          country_code as string,",
						"          continent as string,",
						"          population as integer,",
						"          indicator as string,",
						"          daily_count as integer,",
						"          date as date,",
						"          rate_14_day as double,",
						"          source as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false) ~> srccasesanddeath",
						"source(output(",
						"          country as string,",
						"          country_code_2_digit as string,",
						"          country_code_3_digit as string,",
						"          continent as string,",
						"          population as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> countrylookup",
						"srccasesanddeath filter(continent=='Europe' && not(isNull(country_code))) ~> fileurope",
						"fileurope select(mapColumn(",
						"          country,",
						"          country_code,",
						"          population,",
						"          indicator,",
						"          daily_count,",
						"          source,",
						"          each(match(name=='date'),",
						"               'repoted_'+$$ = $$)",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 pivot(groupBy(country,",
						"          country_code,",
						"          population,",
						"          repoted_date,",
						"          source),",
						"     pivotBy(indicator, ['confirmed cases', 'deaths']),",
						"     counts = sum(daily_count),",
						"     columnNaming: '$V_$N',",
						"     lateral: true) ~> pivotcounts",
						"pivotcounts, countrylookup lookup(pivotcounts@country == countrylookup@country,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> lkpCountry",
						"lkpCountry select(mapColumn(",
						"          country = pivotcounts@country,",
						"          population = pivotcounts@population,",
						"          country_code_2_digit,",
						"          country_code_3_digit,",
						"          country_code,",
						"          repoted_date,",
						"          source,",
						"          cases_counts = {confirmed cases_counts},",
						"          deaths_counts",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"select2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_cases_and_deaths')]",
				"[concat(variables('factoryId'), '/datasets/ds_country_lookup')]",
				"[concat(variables('factoryId'), '/datasets/ds_processed_cases_and_deaths')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_hospital_admision')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_hospital_adminsion_src",
								"type": "DatasetReference"
							},
							"name": "srchospitaladminsion"
						},
						{
							"dataset": {
								"referenceName": "ds_country_lookup",
								"type": "DatasetReference"
							},
							"name": "srccountrylkp"
						},
						{
							"dataset": {
								"referenceName": "ds_date_dim_lkp",
								"type": "DatasetReference"
							},
							"name": "srcDateDim"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_tgt_hospital_admission_weekly",
								"type": "DatasetReference"
							},
							"name": "sinkWeekly"
						},
						{
							"dataset": {
								"referenceName": "ds_tgt_hospital_admissions_daily",
								"type": "DatasetReference"
							},
							"name": "sinkDaily"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "lookup1"
						},
						{
							"name": "select2"
						},
						{
							"name": "splitDailyWeekly"
						},
						{
							"name": "derivedYearWeek"
						},
						{
							"name": "aggMaxMinWdt"
						},
						{
							"name": "join1"
						},
						{
							"name": "pivotIndicator"
						},
						{
							"name": "sortWeekly"
						},
						{
							"name": "sortDaily"
						},
						{
							"name": "selectWeekly"
						},
						{
							"name": "selectDaily"
						}
					],
					"scriptLines": [
						"source(output(",
						"          country as string,",
						"          indicator as string,",
						"          date as date,",
						"          year_week as string,",
						"          value as double,",
						"          source as string,",
						"          url as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> srchospitaladminsion",
						"source(output(",
						"          country as string,",
						"          country_code_2_digit as string,",
						"          country_code_3_digit as string,",
						"          continent as string,",
						"          population as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> srccountrylkp",
						"source(output(",
						"          date_key as string,",
						"          date as string,",
						"          year as string,",
						"          month as string,",
						"          day as string,",
						"          day_name as string,",
						"          day_of_year as string,",
						"          week_of_month as string,",
						"          week_of_year as string,",
						"          month_name as string,",
						"          year_month as string,",
						"          year_week as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> srcDateDim",
						"srchospitaladminsion select(mapColumn(",
						"          country,",
						"          indicator,",
						"          reported_date = date,",
						"          reported_year_week = year_week,",
						"          value,",
						"          source",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1, srccountrylkp lookup(select1@country == srccountrylkp@country,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> lookup1",
						"lookup1 select(mapColumn(",
						"          country = select1@country,",
						"          indicator,",
						"          reported_date,",
						"          reported_year_week,",
						"          value,",
						"          source,",
						"          country_code_2_digit,",
						"          country_code_3_digit,",
						"          population,",
						"          indicator1 = indicator",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> select2",
						"pivotIndicator split(indicator1 == 'Weekly new hospital admissions per 100k' || indicator1 == 'Weekly new ICU admissions per 100k',",
						"     disjoint: false) ~> splitDailyWeekly@(Weekly, Daily)",
						"srcDateDim derive(ecdc_year_week = year + '-W' + lpad(week_of_year,2,'0')) ~> derivedYearWeek",
						"derivedYearWeek aggregate(groupBy(ecdc_year_week),",
						"     week_start_date = min(date),",
						"          week_end_date = max(date)) ~> aggMaxMinWdt",
						"splitDailyWeekly@Weekly, aggMaxMinWdt join(reported_year_week == ecdc_year_week,",
						"     joinType:'inner',",
						"     broadcast: 'auto')~> join1",
						"select2 pivot(groupBy(country,",
						"          reported_date,",
						"          reported_year_week,",
						"          source,",
						"          country_code_3_digit,",
						"          population,",
						"          country_code_2_digit,",
						"          indicator1),",
						"     pivotBy(indicator, ['Weekly new ICU admissions per 100k', 'Weekly new hospital admissions per 100k']),",
						"     count = sum(value),",
						"     columnNaming: '$V$N',",
						"     lateral: true) ~> pivotIndicator",
						"join1 sort(desc(reported_year_week, true),",
						"     asc(country, true)) ~> sortWeekly",
						"splitDailyWeekly@Daily sort(desc(reported_year_week, true),",
						"     asc(country, true)) ~> sortDaily",
						"sortWeekly select(mapColumn(",
						"          country,",
						"          country_code_2_digit,",
						"          country_code_3_digit,",
						"          population,",
						"          reported_year_week,",
						"          source,",
						"          { new_ICU admissions_count} = {Weekly new ICU admissions per 100kcount},",
						"          { new_hospital admissions_count} = {Weekly new hospital admissions per 100kcount},",
						"          reported_week_start_date = week_start_date,",
						"          reported_week_end_date = week_end_date",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectWeekly",
						"sortDaily select(mapColumn(",
						"          country,",
						"          country_code_2_digit,",
						"          country_code_3_digit,",
						"          population,",
						"          reported_date,",
						"          icu_admissions_count = {Weekly new ICU admissions per 100kcount},",
						"          hospital_admissions_count = {Weekly new hospital admissions per 100kcount},",
						"          source",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectDaily",
						"selectWeekly sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sinkWeekly",
						"selectDaily sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sinkDaily"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_hospital_adminsion_src')]",
				"[concat(variables('factoryId'), '/datasets/ds_country_lookup')]",
				"[concat(variables('factoryId'), '/datasets/ds_date_dim_lkp')]",
				"[concat(variables('factoryId'), '/datasets/ds_tgt_hospital_admission_weekly')]",
				"[concat(variables('factoryId'), '/datasets/ds_tgt_hospital_admissions_daily')]"
			]
		}
	]
}